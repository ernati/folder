네트워킹에서 프로토콜은 데이터 서식 지정 및 처리를 위한 규칙 세트입니다. 네트워크 프로토콜은 컴퓨터의 공통 언어와 같습니다. 네트워크 내의 컴퓨터는 아주 상이한 소프트웨어와 하드웨어를 사용할 수 있습니다. 그렇지만 프로토콜을 사용하면 서로 통신할 수 있습니다.
표준화된 프로토콜은 컴퓨터가 사용할 수 있는 공통 언어와 같습니다.
인터넷에는 프로세스 유형에 따라 상이한 프로토콜이 있습니다.
프로토콜은 네트워킹 기능을 가능하게 합니다. 예를 들어, IP는 데이터 패킷의 출처와 목적지를 표시하여 데이터 라우팅을 담당합니다. IP 덕분에 네트워크 간 통신이 가능합니다. 따라서 IP는 네트워크 계층 프로토콜로 간주됩니다.
또 다른 예로, TCP는 네트워크를 통한 데이터 패킷의 전송이 원활하게 진행되도록 보장합니다. 따라서 TCP는 전송 계층 프로토콜로 간주됩니다.
- IPsec: 인터넷 프로토콜 보안은 VPN을 통해 암호화되고 인증된 IP 연결을 설정합니다. 기술적으로 IPsec은 하나의 프로토콜이 아니라 캡슐화 보안 프로토콜, 인증 헤더, 보안 연결을 포함하는 프로토콜 모음입니다.
- ICMP: 인터넷 제어 메시지 프로토콜은 오류를 보고하고 상태 업데이트를 제공합니다. 예를 들어 라우터가 패킷을 전달할 수 없는 경우 이 프로토콜은 ICMP 메시지를 패킷의 출처로 다시 보냅니다.
- IGMP: 인터넷 그룹 관리 프로토콜은 일대다 네트워크 연결을 설정합니다. IGMP는 멀티캐스팅을 설정하는 데 도움이 되므로 여러 컴퓨터에서 하나의 IP 주소로 전달되는 데이터 패킷을 수신할 수 있습니다.
인터넷에서 사용되는 프로토콜 중 알아야 할 가장 중요한 것들은 다음과 같습니다.
- TCP: TCP는 안정적인 데이터 전달을 보장하는 전송 계층 프로토콜입니다. TCP는 IP와 함께 사용하기위한 것이며 두 프로토콜은 종종 TCP/IP로 함께 참조됩니다.
- HTTP: 하이퍼텍스트 전송 프로토콜은 대부분의 사용자가 상호 작용하는 인터넷인 월드와이드웹의 기초로 장치간에 데이터를 전송하는 데 사용됩니다.
- HTTPS: HTTP의 문제점은 암호화되지 않아서 HTTP 메시지를 가로채면 모든 공격자가 읽을 수 있다는 것입니다. HTTPS는 HTTP 메시지를 암호화하여 이 문제를 해결합니다.
- TLS/SSL: 전송 계층 보안은 HTTPS에서 암호화에 사용하는 프로토콜입니다. TLS는 이전에는 보안 소켓 계층이라고 불렸습니다.
- UDP: 사용자 데이터그램 프로토콜은 전송 계층에서 TCP보다는 더 빠르지만 안정성이 떨어지는 대안입니다. UDP는 빠른 데이터 전달이 가장 중요한 비디오 스트리밍 및 게임과 같은 서비스에서 자주 사용됩니다.
네트워크 라우터는 특정 프로토콜을 사용하여 다른 라우터에 대한 가장 효율적인 네트워크 경로를 검색합니다. 이러한 프로토콜은 사용자 데이터 전송에는 사용되지 않습니다. 중요한 네트워크 라우팅 프로토콜에는 다음이 포함됩니다.
- BGP: 경계 게이트웨이 프로토콜은 네트워크에서 제어하는 IP 주소를 브로드캐스트하는 데 사용하는 애플리케이션 계층 프로토콜입니다.이 정보를 통해 라우터는 목적지로 가는 도중에 통과해야 하는 네트워크 데이터 패킷을 결정할 수 있습니다.
- EIGRP: 향상된 내부 게이트웨이 라우팅 프로토콜은 라우터 간의 거리를 식별합니다. EIGRP는 각 라우터의 최상의 경로 레코드를 자동으로 업데이트하고 해당 업데이트를 네트워크 내의 다른 라우터에 브로드캐스트합니다.
- OSPF: 최단 경로 우선 프로토콜은 거리, 대역폭 등의 다양한 요소를 기반으로 가장 효율적인 네트워크 경로를 계산합니다.
- RIP: 라우팅 정보 프로토콜은 라우터 간의 거리를 식별하는 구형의 라우팅 프로토콜입니다. RIP는 애플리케이션 계층 프로토콜입니다.
컴퓨팅의 모든 측면과 마찬가지로 공격자는 네트워킹 프로토콜이 작동하는 방식을 악용하여 시스템을 손상시키거나 압도할 수 있습니다. 이러한 프로토콜은 대부분 분산 서비스 거부 공격에 사용됩니다. 예를 들어 SYN 폭주 공격에서 공격자는 TCP 프로토콜의 작동 방식을 이용합니다. 공격자는 SYN 패킷을 보내 서버와 TCP 핸드셰이크를 반복적으로 시작하여 서버에서 합법적인 사용자에게 서비스를 제공할 수 없도록 만듭니다. 서버의 리소스가 모든 가짜 TCP 연결에 묶이게 되기 때문입니다.