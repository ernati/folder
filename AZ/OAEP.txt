RSA는 동일한 키 값을 사용하므로 중간에 암호문을 도청하더라도 해독이 어렵지만 동일한 문자가 사용되었음은 알아챌 수 있다. 따라서 padding값과 추가 연산하여 같은 문자라도 다른 결과값이 나오도록 하고 있는데, 이를 OAEP라고 한다. OAEP는 CCA로부터 보다 안전해지며, r값이 매번 변하므로 같은 입력에 대하여 다른 출력을 얻을 수 있다. 또한 부분 복원이 불가능하다.
원문 m에 paaing을 붙여 X를 만들고 랜덤 스트링 r에 해시함수 G를 적용하여 G(r)을 만든다. 둘을 XOR 연산한 값이 X가 된다.
X를 해시함수 H를 적용하여 H(X)를 만들고, 이를 r과 XOR한다. 그 결과는 Y가 된다.
이렇게 얻어낸 XY를 이용하여 C=M^e mod n 대신 C=(XY)^e mod n 을 암호문으로 사용한다.
이를 d로 복호화하면 당연히 XY를 얻는다. 그럼 이로부터 M을 다시 추출해내야 복호화가 완전히 끝난다.
Y를 H(X)와 XOR 연산하면 다시 r을 얻는다. r을 얻었으므로 G(r)을 구할 수 있고, 이를 X와 XOR연산하면 M+padding이 나온다. padding값을 제거하면 M을 얻는다.
OAEP는 같은 M이 들어와도 다른 C를 얻을 수 있다. 따라서 Deterministic 한 방법을 Probablistic 하게 바꿀 수 있게 되는 것이다. X나 Y, r 등 복호화 과정에서 단 하나의 값에서 한 개의 bit이라도 틀리게 되면 복호화가 완전히 불가능하게 된다. 이를 all-or-nothing, 부분 복원 불가능이라 한다.